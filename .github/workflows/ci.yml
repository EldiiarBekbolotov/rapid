name: CI

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

env:
  QT_VERSION: '6.5.0'
  QT_ARCH: 'wasm_32'
  BUILD_DIR: 'build'

jobs:
  build:
    name: Build (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Debug - Environment
      shell: bash
      run: |
        echo "Runner OS: ${{ runner.os }}"
        echo "Runner temp: ${{ runner.temp }}"
        echo "Workspace: ${{ github.workspace }}"
        echo "Event: ${{ github.event_name }}"
        echo "Ref: ${{ github.ref }}"
        echo "Workflow: ${{ github.workflow }}"
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      shell: bash
      run: |
        python -m pip install --upgrade pip
        python -m pip install aqtinstall py7zr
    
    - name: Install Qt
      id: install_qt
      shell: bash
      run: |
        echo "Installing Qt ${{ env.QT_VERSION }} for ${{ runner.os }}"
        
        # Set architecture based on OS
        if [ "${{ runner.os }}" = "macOS" ]; then
          ARCH="clang_64"
        elif [ "${{ runner.os }}" = "Linux" ]; then
          ARCH="gcc_64"
          sudo apt-get update
          sudo apt-get install -y build-essential
        else  # Windows
          ARCH="msvc2019_64"
          choco install -y 7zip
        fi
        
        echo "Using architecture: $ARCH"
        
        # Install Qt
        python -m aqt install-qt ${{ runner.os }} desktop ${{ env.QT_VERSION }} $ARCH -m qtwebengine
        
        # Set Qt path
        if [ "${{ runner.os }}" = "Windows" ]; then
          QT_PATH="C:\\Qt\\${{ env.QT_VERSION }}\\$ARCH"
        else
          QT_PATH="$HOME/Qt/${{ env.QT_VERSION }}/$ARCH"
        fi
        
        echo "Qt installation path: $QT_PATH"
        echo "$QT_PATH/bin" >> $GITHUB_PATH
        echo "QT_PATH=$QT_PATH" >> $GITHUB_ENV
        
        # Verify qmake
        qmake --version || echo "qmake not found in PATH"
        which qmake || true
    
    - name: Configure and build
      shell: bash
      run: |
        echo "Current PATH: $PATH"
        echo "qmake location: $(which qmake || echo 'not found')"
        
        mkdir -p ${{ env.BUILD_DIR }}
        cd ${{ env.BUILD_DIR }}
        
        # Configure
        cmake $GITHUB_WORKSPACE/qt_web_editor \
          -DCMAKE_BUILD_TYPE=Release \
          -DCMAKE_PREFIX_PATH="$QT_PATH"
        
        # Build
        cmake --build . --config Release -- -j$(nproc)

    - name: Upload artifacts
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: build-${{ matrix.os }}
        path: |
          ${{ env.BUILD_DIR }}/*
          ${{ env.BUILD_DIR }}/bin/*
        retention-days: 1
