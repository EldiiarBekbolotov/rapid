name: Build and Release Rapid

on:
  push:
    tags:
      - "v*.*.*"
  workflow_dispatch:

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-latest
            qt_arch: win64_msvc2019_64
          - os: macos-latest
            qt_arch: clang_64

    defaults:
      run:
        shell: bash

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Qt with AQT
      uses: jurplel/install-qt-action@v3
      with:
        version: '6.5.3'
        target: 'desktop'
        arch: ${{ matrix.qt_arch }}
        modules: 'qtwebengine qtwebchannel qtpositioning qtwebsockets'

    - name: Install Windows dependencies
      if: matrix.os == 'windows-latest'
      run: choco install 7zip

    - name: Configure CMake
      run: |
        mkdir -p build
        cd build
        cmake ../qt_web_editor -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH="$Qt6_DIR"

    - name: Build app
      run: |
        cd build
        cmake --build . --config Release --parallel

    - name: Bundle on Windows
      if: matrix.os == 'windows-latest'
      shell: pwsh
      run: |
        & "${Env:Qt6_DIR}\\bin\\windeployqt.exe" --release build\\Rapid.exe

    - name: Bundle on macOS
      if: matrix.os == 'macos-latest'
      run: |
        "$Qt6_DIR/bin/macdeployqt" build/Rapid.app -dmg

    - name: Package artifacts
      run: |
        cd build
        if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
          7z a Rapid-Windows.zip Rapid.exe resources/
        elif [[ "${{ matrix.os }}" == "macos-latest" ]]; then
          mv Rapid.dmg Rapid-macOS.dmg
        fi

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: rapid-${{ matrix.os }}
        path: |
          build/*.zip
          build/*.dmg

    - name: Upload GitHub Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v2
      with:
        files: |
          build/*.zip
          build/*.dmg
