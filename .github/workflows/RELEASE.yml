name: RELEASE

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

env:
  QT_VERSION: '6.5.0'
  BUILD_DIR: 'build'

jobs:
  build:
    name: Build (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    
    steps:
    - uses: actions/checkout@v4

    - name: Debug - Environment
      shell: bash
      run: |
        echo "Runner OS: ${{ runner.os }}"
        echo "Runner temp: ${{ runner.temp }}"
        echo "Workspace: ${{ github.workspace }}"
        echo "Event: ${{ github.event_name }}"
        echo "Ref: ${{ github.ref }}"
        echo "Workflow: ${{ github.workflow }}"

    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install Python dependencies
      shell: bash
      run: |
        python -m pip install --upgrade pip
        python -m pip install aqtinstall py7zr

    - name: Install Qt on macOS
      if: runner.os == 'macOS'
      run: |
        brew update
        brew install qt@6
        echo "CMAKE_PREFIX_PATH=$(brew --prefix qt@6)/lib/cmake" >> $GITHUB_ENV

    - name: Install Qt on Ubuntu
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential libglu1-mesa-dev
        python -m aqt install-qt linux desktop ${{ env.QT_VERSION }} gcc_64 -m qtwebengine
        echo "$HOME/Qt/${{ env.QT_VERSION }}/gcc_64/lib/cmake" >> $GITHUB_PATH
        echo "CMAKE_PREFIX_PATH=$HOME/Qt/${{ env.QT_VERSION }}/gcc_64/lib/cmake" >> $GITHUB_ENV

    - name: Install Qt on Windows
      if: runner.os == 'Windows'
      shell: pwsh
      run: |
        choco install -y 7zip
        python -m aqt install-qt windows desktop $env:QT_VERSION msvc2019_64 -m qtwebengine
        $qtPath = "C:\\Qt\\$env:QT_VERSION\\msvc2019_64\\lib\\cmake"
        Add-Content -Path $Env:GITHUB_PATH -Value $qtPath
        Add-Content -Path $Env:GITHUB_ENV -Value "CMAKE_PREFIX_PATH=$qtPath"

    - name: Configure and build (Linux/macOS)
      if: runner.os != 'Windows'
      shell: bash
      run: |
        echo "Current PATH: $PATH"
        echo "CMAKE_PREFIX_PATH: $CMAKE_PREFIX_PATH"
        
        mkdir -p ${{ env.BUILD_DIR }}
        cd ${{ env.BUILD_DIR }}
        
        cmake $GITHUB_WORKSPACE/qt_web_editor \
          -DCMAKE_BUILD_TYPE=Release \
          -DCMAKE_PREFIX_PATH="$CMAKE_PREFIX_PATH"
        
        JOBS=$(nproc)
        cmake --build . --config Release -- -j$JOBS

    - name: Configure and build (Windows)
      if: runner.os == 'Windows'
      shell: pwsh
      run: |
        Write-Host "Current PATH: $Env:PATH"
        Write-Host "CMAKE_PREFIX_PATH: $Env:CMAKE_PREFIX_PATH"
        
        New-Item -ItemType Directory -Path $Env:BUILD_DIR -Force | Out-Null
        Set-Location $Env:BUILD_DIR
        
        cmake $Env:GITHUB_WORKSPACE\qt_web_editor `
          -DCMAKE_BUILD_TYPE=Release `
          -DCMAKE_PREFIX_PATH=$Env:CMAKE_PREFIX_PATH
        
        $jobs = $Env:NUMBER_OF_PROCESSORS
        cmake --build . --config Release -- /m:$jobs

    - name: Upload artifacts
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: build-${{ matrix.os }}
        path: |
          ${{ env.BUILD_DIR }}/*
          ${{ env.BUILD_DIR }}/bin/*
        retention-days: 1
