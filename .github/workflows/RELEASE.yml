name: CI

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

env:
  QT_VERSION: '6.5.0'
  BUILD_DIR: 'build'

jobs:
  build:
    name: Build (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Debug - Environment
      shell: bash
      run: |
        echo "Runner OS: ${{ runner.os }}"
        echo "Runner temp: ${{ runner.temp }}"
        echo "Workspace: ${{ github.workspace }}"
        echo "Event: ${{ github.event_name }}"
        echo "Ref: ${{ github.ref }}"
        echo "Workflow: ${{ github.workflow }}"
    
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install dependencies (Ubuntu & Windows)
      shell: bash
      if: runner.os != 'macOS'
      run: |
        python -m pip install --upgrade pip
        python -m pip install aqtinstall py7zr

    - name: Install Qt (macOS)
      if: runner.os == 'macOS'
      run: |
        brew update
        brew install qt@6

    - name: Set CMAKE_PREFIX_PATH (macOS)
      if: runner.os == 'macOS'
      run: echo "CMAKE_PREFIX_PATH=$(brew --prefix qt@6)/lib/cmake" >> $GITHUB_ENV

    - name: Install Qt (Ubuntu)
      if: runner.os == 'Linux'
      shell: bash
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential libglu1-mesa-dev
        python -m pip install --upgrade pip
        python -m pip install aqtinstall py7zr
        # Install Qt using aqtinstall
        python -m aqt install-qt linux desktop ${{ env.QT_VERSION }} gcc_64 -m qtwebengine
        echo "$HOME/Qt/${{ env.QT_VERSION }}/gcc_64/lib/cmake" >> $GITHUB_PATH
        echo "CMAKE_PREFIX_PATH=$HOME/Qt/${{ env.QT_VERSION }}/gcc_64/lib/cmake" >> $GITHUB_ENV

    - name: Install Qt (Windows)
      if: runner.os == 'Windows'
      shell: bash
      run: |
        choco install -y 7zip
        python -m pip install --upgrade pip
        python -m pip install aqtinstall py7zr
        python -m aqt install-qt windows desktop ${{ env.QT_VERSION }} msvc2019_64 -m qtwebengine
        echo "C:\\Qt\\${{ env.QT_VERSION }}\\msvc2019_64\\lib\\cmake" >> $GITHUB_PATH
        echo "CMAKE_PREFIX_PATH=C:\\Qt\\${{ env.QT_VERSION }}\\msvc2019_64\\lib\\cmake" >> $GITHUB_ENV

    - name: Configure and build
      shell: bash
      run: |
        echo "Current PATH: $PATH"
        echo "CMAKE_PREFIX_PATH: $CMAKE_PREFIX_PATH"

        mkdir -p ${{ env.BUILD_DIR }}
        cd ${{ env.BUILD_DIR }}

        cmake $GITHUB_WORKSPACE/qt_web_editor \
          -DCMAKE_BUILD_TYPE=Release \
          -DCMAKE_PREFIX_PATH="$CMAKE_PREFIX_PATH"

        # Use nproc on Linux/macOS, fallback on Windows to number of processors env var
        if [[ "$(uname)" == "Linux" || "$(uname)" == "Darwin" ]]; then
          JOBS=$(nproc)
        else
          JOBS=$env:NUMBER_OF_PROCESSORS
        fi

        cmake --build . --config Release -- -j$JOBS

    - name: Upload artifacts
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: build-${{ matrix.os }}
        path: |
          ${{ env.BUILD_DIR }}/*
          ${{ env.BUILD_DIR }}/bin/*
        retention-days: 1
