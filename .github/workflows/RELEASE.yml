name: RELEASE

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

env:
  QT_VERSION: '6.6.3'
  BUILD_DIR: 'build'
  APP_NAME: 'Rapid'

jobs:
  build:
    name: Build (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
    - uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install aqtinstall py7zr

    - name: Install Qt on macOS
      if: runner.os == 'macOS'
      run: |
        brew update
        brew install qt create-dmg
        echo "CMAKE_PREFIX_PATH=$(brew --prefix qt)/lib/cmake" >> $GITHUB_ENV

    - name: Install Qt on Ubuntu
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential libglu1-mesa-dev
        python -m aqt install-qt linux desktop $QT_VERSION gcc_64 -m qtbase,qtwebengine
        echo "CMAKE_PREFIX_PATH=$HOME/Qt/$QT_VERSION/gcc_64/lib/cmake" >> $GITHUB_ENV

    - name: Install Qt on Windows
      if: runner.os == 'Windows'
      shell: pwsh
      run: |
        choco install -y 7zip
        python -m aqt install-qt windows desktop $env:QT_VERSION win64_msvc2019_64 -m qtbase,qtwebengine
        $qtPath = "C:\\Qt\\$env:QT_VERSION\\win64_msvc2019_64\\lib\\cmake"
        Add-Content -Path $env:GITHUB_ENV -Value "CMAKE_PREFIX_PATH=$qtPath"

    - name: Build (Linux/macOS)
      if: runner.os != 'Windows'
      run: |
        echo "CMAKE_PREFIX_PATH: $CMAKE_PREFIX_PATH"
        mkdir -p $BUILD_DIR
        cd $BUILD_DIR
        cmake ../qt_web_editor -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH="$CMAKE_PREFIX_PATH"
        cmake --build . --config Release --parallel

    - name: Build (Windows)
      if: runner.os == 'Windows'
      shell: pwsh
      run: |
        New-Item -ItemType Directory -Path $env:BUILD_DIR -Force | Out-Null
        Set-Location $env:BUILD_DIR
        cmake ../qt_web_editor -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH="$env:CMAKE_PREFIX_PATH"
        cmake --build . --config Release -- /m

    - name: Package macOS .dmg
      if: runner.os == 'macOS'
      run: |
        cd $BUILD_DIR
        APP_PATH=$(find . -type d -name "*.app" | head -n 1)
        echo "App found at: $APP_PATH"
        mkdir -p dmg
        create-dmg \
          --volname "Rapid" \
          --window-size 600 400 \
          --icon-size 100 \
          --app-drop-link 400 200 \
          "dmg/Rapid.dmg" "$APP_PATH"

    - name: Upload macOS DMG
      if: runner.os == 'macOS'
      uses: actions/upload-artifact@v4
      with:
        name: Rapid-macOS
        path: build/dmg/Rapid.dmg
        retention-days: 7

    - name: Upload Windows Build
      if: runner.os == 'Windows'
      uses: actions/upload-artifact@v4
      with:
        name: Rapid-Windows
        path: |
          build\Release\*.exe
          build\*.exe
        retention-days: 7

    - name: Upload Ubuntu Build
      if: runner.os == 'Linux'
      uses: actions/upload-artifact@v4
      with:
        name: Rapid-Ubuntu
        path: |
          build/*
          !**/*.o
        retention-days: 7
