name: Build and Release Rapid

on:
  push:
    tags:
      - "v*.*.*"
  workflow_dispatch:

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            qt_arch: gcc_64
          - os: windows-latest
            qt_arch: win64_msvc2019_64
          - os: macos-latest
            qt_arch: clang_64

    defaults:
      run:
        shell: bash

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Qt with AQT
      uses: jurplel/install-qt-action@v3
      with:
        version: '6.5.3'
        target: 'desktop'
        arch: ${{ matrix.qt_arch }}
        modules: 'qtwebengine qtwebchannel qtpositioning qtwebsockets'

    - name: Install Linux dependencies
      if: matrix.os == 'ubuntu-latest'
      run: sudo apt update && sudo apt install -y libgl1-mesa-dev libxkbcommon-x11-0 build-essential patchelf

    - name: Configure CMake
      run: |
        mkdir -p build
        cd build
        cmake ../qt_web_editor -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH="$Qt6_DIR"

    - name: Build app
      run: |
        cd build
        cmake --build . --config Release --parallel

    - name: Bundle on Windows
      if: matrix.os == 'windows-latest'
      run: |
        & "${Env:Qt6_DIR}\bin\windeployqt.exe" --release build\Rapid.exe
      shell: pwsh

    - name: Bundle on macOS
      if: matrix.os == 'macos-latest'
      run: |
        if [ -d "build/Rapid.app" ]; then
          "$Qt6_DIR/bin/macdeployqt" build/Rapid.app -dmg
        elif [ -d "build/Release/Rapid.app" ]; then
          "$Qt6_DIR/bin/macdeployqt" build/Release/Rapid.app -dmg
        else
          echo "‚ùå ERROR: Rapid.app not found"
          exit 1
        fi

    - name: Bundle on Linux
      if: matrix.os == 'ubuntu-latest'
      run: |
        wget https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage -O linuxdeploy
        chmod +x linuxdeploy
        ./linuxdeploy --appdir AppDir \
          --executable build/Rapid \
          --desktop-file qt_web_editor/resources/rapid.desktop \
          --icon-file qt_web_editor/resources/icons/app-icon.png \
          --output appimage || true

    - name: Package artifacts
      run: |
        cd build
        if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
          7z a Rapid-Windows.zip Rapid.exe resources/
        elif [[ "${{ matrix.os }}" == "macos-latest" ]]; then
          mv *.dmg Rapid-macOS.dmg
        elif [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
          mv *.AppImage Rapid-Linux.AppImage
        fi

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: rapid-${{ matrix.os }}
        path: |
          build/*.zip
          build/*.dmg
          build/*.AppImage

    - name: Upload GitHub Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v2
      with:
        files: |
          build/*.zip
          build/*.dmg
          build/*.AppImage
